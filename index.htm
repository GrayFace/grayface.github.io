-[SetTitle"`en|News|`ru|Новости|"]
<style>
	h3:not(#toc-header) {
		display: inline-block;
		margin-right: 20px;
		margin-bottom: 0.7em;
	}
	.desc span {
		display: inline-block;
		min-width: 0.8em;
		text-align: center;
	}
	span.sp {
		min-width: 0.4em;
	}
	.date {
		margin-top: 0.3em;
		color: gray;
		font-size: 80%;
		padding-left: 2px;
	}
	article {
		margin-top: 1em;
	}
	.files {
		margin-top: 0.5em;
		padding-left: 1px;
		/* margin-bottom: 0.5em; */
		/* padding-left: 5px;
		border-left: 1px dotted gray; */
	}
	#welcome {
		margin-top: 1.5em;
		font-size: 110%;
	}
	#welcome ~ * {
		margin-left: 10px;
	}
</style>
<div id="welcome">
	`en|Welcome, travelers!|`ru|Добро пожаловать!|<br><br>
	`en|Soon I'm going to release new versions of many things.|
	`ru|Скоро я выпущу новые версии многих программ.|
</div>
<div>
-[
package.loaded.dataNews = nil
local releases = require"dataNews"

function item(t)
	local a = |s| ("`en|%s|`ru|%s|"):format(t[s], t[s.."RU"] or t[s])
	local desc = Escape(a"Desc", 'main')
	desc = desc:gsub("%[([%+%-%*])%] ", '[<span>%1</span>]<span class="sp"> </span>'):gsub("<span>%-</span>", "<span>&ndash;</span>")
	local info = t.FileInfo or {}
	local infoRU = t.FileInfoRU or {}
	local files = t.Files or {}
	local mirrors = t.MirrorSF or {}
	local TitleURL = files[1] and not files[2] and not info[1]
]
<article>-[
	if TitleURL then
		]<h3>-[
			CustomLink(files[1], a"Title", mirrors[1])
		]</h3>-[
	else
		]<h3>$[a"Title"]</h3>-[
	end
	]<div class="desc">-[(desc)]</div>-[
	if not TitleURL and files[1] then
		]<div class="files">-[
		for i = 1, #files do
			local url = files[i]
			local fname = url:match("[^?]*"):match(".*/([^/]+)/?$")
			local en = info[i] or "Download "..fname
			local ru = infoRU[i] or "Скачать "..fname
			local desc = ("`en|%s|`ru|%s|"):format(en, ru)
			]<div>-[
				CustomLink(url, desc, mirrors[i])
			]</div>-[
		end
		]</div>-[
	end
	]<div class="date">$[a"Date"]</div>
</article>
-[
end

for i = #releases, 1, -1 do
	item(releases[i])
end
]
</div>