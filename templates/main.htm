<!DOCTYPE html>
-[local SiteName = 'en|Sergey "GrayFace" Rozhenko Homepage|ru|Сайт Сергея "GrayFace" Роженко|'
]
<html lang="en|en|ru|ru|">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>$[Title] &ndash; $[SiteName]</title>
-[
local menuW = 185
local clH1border = '#dadade'
local clBorder = '#ccc'
local clSel = '#77a7e3'
local clSelX = RGB(clSel)
local clMenuBorder = '#'..MixCl(MixCl(clSel, 0, 0.8), 0xffffff, 0.3)
-- local clH4grad = '235, 237, 248'
local MainGradCl2 = '#004000'
local MainGradMix = 0.09
local clMainGrad1 = '#'..MixCl(MainGradCl2, '#d7d9ec', MainGradMix)
local clMainGrad2 = '#'..MixCl(MainGradCl2, '#dfe1f4', MainGradMix)
local clMainGrad3 = '#'..MixCl(MainGradCl2, '#cfd1e2', MainGradMix)
local MainGradLight = 0.08
local MainGradLight2 = MainGradLight*1.25
local MainGradDark = MainGradLight*0.1
]
<style>
	body {
		font-family: Arial;
		font-size: 85%;
		padding: 0 0;
		margin: 0 auto;
		position: relative;
		max-width: 1200px;
		background-color: #e2e4f0;

		background:
			repeating-linear-gradient(45deg, rgba(0,0,0,$MainGradDark) 2px, rgba(240, 242, 255, $MainGradLight) 3.5px, rgba(0,0,0,0) 9px, rgba(0,0,0,0) 13px),
			repeating-linear-gradient(105deg, rgba(0,0,0,$MainGradDark) 0px, rgba(240, 242, 255, $MainGradLight) 1.5px, rgba(0,0,0,0) 7px, rgba(0,0,0,0) 11px),
			repeating-linear-gradient(165deg, rgba(0,0,0,$MainGradDark) 0px, rgba(240, 242, 255, $MainGradLight2) 1.5px, rgba(0,0,0,0) 7px, rgba(0,0,0,0) 11px),
			linear-gradient(190deg, $clMainGrad1 0%, $clMainGrad2 60%, $clMainGrad3 100%);
		background-attachment: fixed;
	}
	ul {
		margin: 3px 0px;
		padding-left: 20px;
	}
/* TOC */
	#toc {
		padding-bottom: 1.3em;
	}
	#toc ul {
		color: #d4d7eb;
		margin-top: 0px;
		margin-bottom: 3px;
		padding-left: 20px;
	}
	#toc li ul {
		color: #a6aedf;
	}
	#toc ul a:not(:hover):not(:active) {
		text-decoration: none;
	}
	#toc ul a:link {
		color: #3e4a99;
	}
	/* Links */
	a:link:hover, a:visited:hover {
		background-color: #E8E8FF;
		border-radius: 4px;
	}
	a:link {
		border-radius:4px;
		color: #4e5dbf;
	}
	a:link:active, a:visited:active {
		color: #d00;
	}
	#menu-lang a:visited {
		color: #513ba5;
	}
/* Misc */
	table {
		border-collapse: collapse;
		margin: 5px 0;
	}
	table, table td, table th {
		border: 1px solid #999;
		padding: 1px 4px;
	}
	#content {
		padding: 0;
		margin: 5px 5px 20px $[menuW]px;
		border: 1px solid $clBorder;
		background-color: white;
	}
	#content2 {
		padding: 0 19px 25px 22px;
	}
	#toc-header {
		margin-bottom: 10px;
	}
	h1 {
		padding: 10px 10px 10px 20px;
		margin: 3px 1px 15px;
		border-bottom: 3px double $clH1border;
		overflow: hidden;
		text-overflow: ellipsis;
		/* background: linear-gradient(110deg, #ffffff 65%, rgba(-[(clH4grad)], 0.5) 75%, #ffffff 85%); */
	}
	h2, h3:not(#toc-header) {
		display: table;
		padding: 3px 8px;
		border-radius: 10px;
		border: 1px solid rgba(0,0,0,0.25);
		box-shadow: 1px 1px 0 0 rgba(0,0,0,0.4);
		margin-left: -4px;
	}
	h3 a:not(:hover):not(:active) {
		text-decoration: none;
	}
	#content h4 {
		margin-top: 2em;
		margin-bottom: 0.6em;
	}
	img {
		max-width: 100%;
		max-height: 100vh;
	}
	#site-name {
		float: right;
		font-size: 80%;
		color: #eee;
		text-shadow: 1px 1px $clBorder;
		margin-right: 5px;
		vertical-align: top;
	}
/* Mirrors */
	.mirror, .mirror:link:hover, .mirror::visited:hover {
		background-color:transparent;
	}
	.mirror {
		margin-left: 0.2em;
		margin-right: 0.2em;
	}
	h3 .mirror {
		margin-left: 0.3em;
	}
	.mirror img {
		vertical-align:middle;
		height:1em;
		margin: -0.1em 0 0.1em;
		border-radius:4px;
	}
	h3 .mirror img {
		margin: -0.1em -7px 0.1em 0;
	}
	.mirror img:hover {
	 	background-color: #E8E8FF;
	}
/* Menus */
	#menubar {
		position: absolute;
		width: $[menuW]px;
		top: 0;
		left: 0;
		bottom: 0;
	}
	#menu-lang {
		text-align: center;
		margin: 13.08px 10px 11.72px;
		margin: calc(0.3em + 9px) 10px calc(0.2em + 9px);
	}
	#menu-lang * {
		display: inline-block;
		font-size: 1.5em;
		text-decoration: none;
		border: 1px solid $clMenuBorder;
		border-radius: 3px;
		padding: 4px 6px;
		background-color: white;
	}
	#menu-lang span {
		border-color: $clSel;
	}
	#menu-lang a:hover {
		border-color: rgba($clSelX, 0.7);
		/* background-color: #f8f8f8; */
	}
	#menu-lang a:not(:active) {
		border-right-width: 2px;
		border-bottom-width: 2px;
		padding-bottom: 3px;
		padding-right: 5px;
	}
	.menu, #menu-lang * {
		box-shadow: 1px 1px 0 0 rgba(0,0,0,0.15);
	}
	#menu-lang a {
		box-shadow: 1px 1px 0 0 rgba(0,0,0,0.25);
	}
	#content {
		box-shadow: 0 1px 0 0 rgba(0,0,0,0.15);
	}
	.menu {
		background-color: white;
		margin: 10px 10px;
		padding-bottom: 5px;
		border: 1px solid $clBorder;
	}
	#menu a, .menu-sel {
		display: block;
		padding: 1.5px 5px;
		margin: 0 5px;
		border-radius: 2px;
	}
	#menu a:not(:hover):not(:active) {
		text-decoration: none;
	}
	.menu h4 {
		margin: 2px 2px 5px 2px;
		padding: 4px 8px;
		border-bottom: 1px solid $clH1border;
		/* background: linear-gradient(110deg, rgba(-[(clH4grad)], 0.5) 0%, #ffffff 60%, rgba(-[(clH4grad)], 0.0) 75%, #ffffff 90%); */
		/* background: linear-gradient(110deg, rgba(-[(clH4grad)], 0.5) 0%, #ffffff 60%, #ffffff 70%, rgba(-[(clH4grad)], 0.4) 100%); */
	}
	#menu-contact h4 {
		margin-bottom: 7px;
	}
	.menu-sel {
		background-color: $clSel;
		/* border: 1px solid ; */
		color: white;
		font-weight: bold;
	}
	.submenu {
		padding-left: 11px;
	}
	.menu-icon {
		height: 18px;
		vertical-align:middle;
		margin: 1px 0 3px 0;
	}
	#menu-contact div {
		margin: 0 10px 0 8px;
	}
	#menu-contact a:visited:not(:hover):not(:active) {
		border-bottom: 1px solid rgba(85, 26, 139, 0.5);
	}
/* Resolutions */
@media (max-width: 900px) {
	#content2 {
		padding: 0 15px 25px 17px;
	}
}
@media (max-width: 700px) {
	#menubar {
		position: relative;
		top: 0;
		left: 0;
		left: calc(50% - $[menuW]px + 3px);
	}
	#menu-lang, #menu-contact {
		position: absolute;
		width: -[(menuW-20)]px;
		left: -[(menuW-10)]px;
	}
	#menu-lang {
		top: 1px;
		margin-top: 0;
	}
	#menu-contact {
		top: 35.2px;
		top: calc(2em + 8px);
	}
	h2, h3:not(#toc-header) {
		margin-left: -2px;
	}
	#content2 {
		padding: 0 13px 25px 15px;
	}
	#content {
		margin: 5px 0 0;
		width: auto;
		border-left: none;
		border-right: none;
		border-bottom: none;
	}
}
@media (max-width: -[(menuW*2)]px) {
	#menubar {
		left: calc(50% - $[menuW]px/2 + 1px);
	}
	#menu-lang, #menu-contact {
		position: static;
	}	
	#menu-lang {
		margin-top: 11px;
	}
}
@media (max-width: 500px) {
	#content2 {
		padding: 0 8px 25px 10px;
	}
}
</style>
</head>
<body>
	<div id="menubar">
		<div id="menu-lang">
			en|<span title="English">EN</span>
			<a title="Русский" href="-[(GetPath('ru^'..PageId, PageId))]">RU</a>|
			ru|<a title="English" href="-[(GetPath(PageId, 'ru^'..PageId))]">EN</a>
			<span title="Русский">RU</span>|				
		</div>
		<div id="menu" class="menu">
			<h4>Menu</h4>
-[
			local menu = {"", "mm", "wog", "heroes", "ks", "elma"}

			local function MenuItem(id)
				local _, t = Include(id..".htm")
				local href = GetPath(id, PageId)
				if id ~= PageId then
					]<a href="$[href]">-[
				else
					]<span class="menu-sel">-[
				end]-[(t.MenuTitle)
				CloseTag(id ~= PageId and "a" or "span")
				local id2 = PageId:match("^"..id.."%^[^%^]+")
				if id2 then
					]<div class="submenu">-[
					MenuItem(id2)
					]</div>-[
				end
			end
			for i = 1, #menu do
				MenuItem(menu[i])
			end
]
		</div>
		<div id="menu-contact" class="menu">
			<h4>Contacts</h4>
			<div>
				<span title="en|Email|ru|Почта|" alt="Email">-[(Include"svg/mail.svg")]</span>
				sergroj at mail ru
			</div>
			<div>
				<a href="https://twitter.com/sergrojGrayFace" tabindex="-1" title="Twitter" alt="Twitter">-[(Include"svg/twitter.svg")]</a>
				<a href="https://twitter.com/sergrojGrayFace">sergrojGrayFace</a>
			</div>
			<div>
				<a href="https://vk.com/grayface" tabindex="-1" title="en|VK|ru|ВКонтакте|" alt="en|VK|ru|ВКонтакте|">-[(Include"svg/vk.svg")]</a>
				<a href="https://vk.com/grayface">vk.com/grayface</a>
			</div>
		</div>
	</div>
	<div id="content">
		<h1>$[Title]<span id="site-name" title=$[SiteName]>GrayFace</span><div style="clear:both"></div></h1>
			<div id="content2">
			-[if NeedTOC then
				Content, TOC = require"HelpTOC".TOC(Content, true)
				]<h3 id="toc-header">en|Contents|ru|Содержание|</h3>
				<div id="toc">-[(TOC)]</div>
			-[end]
			-[(Content)]
			</div>
	</div>
</body>
</html>